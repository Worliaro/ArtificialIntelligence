<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.zptc.ai.dao.RecruitStudentsMapper">
  <resultMap id="BaseResultMap" type="cn.zptc.ai.entity.RecruitStudents">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="recruit_title" jdbcType="VARCHAR" property="recruitTitle" />
    <result column="recruit_context" jdbcType="VARCHAR" property="recruitContext" />
    <result column="obtain_employment" jdbcType="VARCHAR" property="obtainEmployment" />
    <result column="create_id" jdbcType="INTEGER" property="createId" />
    <result column="create_name" jdbcType="VARCHAR" property="createName" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_id" jdbcType="INTEGER" property="modifyId" />
    <result column="modify_name" jdbcType="VARCHAR" property="modifyName" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="states" jdbcType="INTEGER" property="states" />
  </resultMap>
  <sql id="Base_Column_List">
    id, recruit_title, recruit_context, obtain_employment, create_id, create_name, create_time, 
    modify_id, modify_name, modify_time, states
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from recruit_students
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from recruit_students
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.zptc.ai.entity.RecruitStudents">
    insert into recruit_students (id, recruit_title, recruit_context, 
      obtain_employment, create_id, create_name, 
      create_time, modify_id, modify_name, 
      modify_time, states)
    values (#{id,jdbcType=INTEGER}, #{recruitTitle,jdbcType=VARCHAR}, #{recruitContext,jdbcType=VARCHAR}, 
      #{obtainEmployment,jdbcType=VARCHAR}, #{createId,jdbcType=INTEGER}, #{createName,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{modifyId,jdbcType=INTEGER}, #{modifyName,jdbcType=VARCHAR}, 
      #{modifyTime,jdbcType=TIMESTAMP}, #{states,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.zptc.ai.entity.RecruitStudents">
    insert into recruit_students
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="recruitTitle != null">
        recruit_title,
      </if>
      <if test="recruitContext != null">
        recruit_context,
      </if>
      <if test="obtainEmployment != null">
        obtain_employment,
      </if>
      <if test="createId != null">
        create_id,
      </if>
      <if test="createName != null">
        create_name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifyId != null">
        modify_id,
      </if>
      <if test="modifyName != null">
        modify_name,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
      <if test="states != null">
        states,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="recruitTitle != null">
        #{recruitTitle,jdbcType=VARCHAR},
      </if>
      <if test="recruitContext != null">
        #{recruitContext,jdbcType=VARCHAR},
      </if>
      <if test="obtainEmployment != null">
        #{obtainEmployment,jdbcType=VARCHAR},
      </if>
      <if test="createId != null">
        #{createId,jdbcType=INTEGER},
      </if>
      <if test="createName != null">
        #{createName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyId != null">
        #{modifyId,jdbcType=INTEGER},
      </if>
      <if test="modifyName != null">
        #{modifyName,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="states != null">
        #{states,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.zptc.ai.entity.RecruitStudents">
    update recruit_students
    <set>
      <if test="recruitTitle != null">
        recruit_title = #{recruitTitle,jdbcType=VARCHAR},
      </if>
      <if test="recruitContext != null">
        recruit_context = #{recruitContext,jdbcType=VARCHAR},
      </if>
      <if test="obtainEmployment != null">
        obtain_employment = #{obtainEmployment,jdbcType=VARCHAR},
      </if>
      <if test="createId != null">
        create_id = #{createId,jdbcType=INTEGER},
      </if>
      <if test="createName != null">
        create_name = #{createName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyId != null">
        modify_id = #{modifyId,jdbcType=INTEGER},
      </if>
      <if test="modifyName != null">
        modify_name = #{modifyName,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="states != null">
        states = #{states,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.zptc.ai.entity.RecruitStudents">
    update recruit_students
    set recruit_title = #{recruitTitle,jdbcType=VARCHAR},
      recruit_context = #{recruitContext,jdbcType=VARCHAR},
      obtain_employment = #{obtainEmployment,jdbcType=VARCHAR},
      create_id = #{createId,jdbcType=INTEGER},
      create_name = #{createName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_id = #{modifyId,jdbcType=INTEGER},
      modify_name = #{modifyName,jdbcType=VARCHAR},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      states = #{states,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>