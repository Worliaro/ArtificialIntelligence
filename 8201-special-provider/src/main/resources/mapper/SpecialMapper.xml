<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.zptc.ai.dao.SpecialMapper">
  <resultMap id="BaseResultMap" type="cn.zptc.ai.entity.Special">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="image" jdbcType="VARCHAR" property="image" />
    <result column="evaluate_work" jdbcType="VARCHAR" property="evaluateWork" />
    <result column="major_style" jdbcType="VARCHAR" property="majorStyle" />
    <result column="student_style" jdbcType="VARCHAR" property="studentStyle" />
    <result column="create_id" jdbcType="INTEGER" property="createId" />
    <result column="create_name" jdbcType="VARCHAR" property="createName" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_id" jdbcType="INTEGER" property="modifyId" />
    <result column="modify_name" jdbcType="VARCHAR" property="modifyName" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="states" jdbcType="INTEGER" property="states" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.zptc.ai.entity.Special">
    <result column="context" jdbcType="LONGVARCHAR" property="context" />
  </resultMap>
  <sql id="Base_Column_List">
    id, title, image, evaluate_work, major_style, student_style, create_id, create_name, 
    create_time, modify_id, modify_name, modify_time, states
  </sql>
  <sql id="Blob_Column_List">
    context
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from special
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from special
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.zptc.ai.entity.Special">
    insert into special (id, title, image, 
      evaluate_work, major_style, student_style, 
      create_id, create_name, create_time, 
      modify_id, modify_name, modify_time, 
      states, context)
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{image,jdbcType=VARCHAR}, 
      #{evaluateWork,jdbcType=VARCHAR}, #{majorStyle,jdbcType=VARCHAR}, #{studentStyle,jdbcType=VARCHAR}, 
      #{createId,jdbcType=INTEGER}, #{createName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{modifyId,jdbcType=INTEGER}, #{modifyName,jdbcType=VARCHAR}, #{modifyTime,jdbcType=TIMESTAMP}, 
      #{states,jdbcType=INTEGER}, #{context,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.zptc.ai.entity.Special">
    insert into special
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="image != null">
        image,
      </if>
      <if test="evaluateWork != null">
        evaluate_work,
      </if>
      <if test="majorStyle != null">
        major_style,
      </if>
      <if test="studentStyle != null">
        student_style,
      </if>
      <if test="createId != null">
        create_id,
      </if>
      <if test="createName != null">
        create_name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifyId != null">
        modify_id,
      </if>
      <if test="modifyName != null">
        modify_name,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
      <if test="states != null">
        states,
      </if>
      <if test="context != null">
        context,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="image != null">
        #{image,jdbcType=VARCHAR},
      </if>
      <if test="evaluateWork != null">
        #{evaluateWork,jdbcType=VARCHAR},
      </if>
      <if test="majorStyle != null">
        #{majorStyle,jdbcType=VARCHAR},
      </if>
      <if test="studentStyle != null">
        #{studentStyle,jdbcType=VARCHAR},
      </if>
      <if test="createId != null">
        #{createId,jdbcType=INTEGER},
      </if>
      <if test="createName != null">
        #{createName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyId != null">
        #{modifyId,jdbcType=INTEGER},
      </if>
      <if test="modifyName != null">
        #{modifyName,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="states != null">
        #{states,jdbcType=INTEGER},
      </if>
      <if test="context != null">
        #{context,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.zptc.ai.entity.Special">
    update special
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="image != null">
        image = #{image,jdbcType=VARCHAR},
      </if>
      <if test="evaluateWork != null">
        evaluate_work = #{evaluateWork,jdbcType=VARCHAR},
      </if>
      <if test="majorStyle != null">
        major_style = #{majorStyle,jdbcType=VARCHAR},
      </if>
      <if test="studentStyle != null">
        student_style = #{studentStyle,jdbcType=VARCHAR},
      </if>
      <if test="createId != null">
        create_id = #{createId,jdbcType=INTEGER},
      </if>
      <if test="createName != null">
        create_name = #{createName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyId != null">
        modify_id = #{modifyId,jdbcType=INTEGER},
      </if>
      <if test="modifyName != null">
        modify_name = #{modifyName,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="states != null">
        states = #{states,jdbcType=INTEGER},
      </if>
      <if test="context != null">
        context = #{context,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.zptc.ai.entity.Special">
    update special
    set title = #{title,jdbcType=VARCHAR},
      image = #{image,jdbcType=VARCHAR},
      evaluate_work = #{evaluateWork,jdbcType=VARCHAR},
      major_style = #{majorStyle,jdbcType=VARCHAR},
      student_style = #{studentStyle,jdbcType=VARCHAR},
      create_id = #{createId,jdbcType=INTEGER},
      create_name = #{createName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_id = #{modifyId,jdbcType=INTEGER},
      modify_name = #{modifyName,jdbcType=VARCHAR},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      states = #{states,jdbcType=INTEGER},
      context = #{context,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.zptc.ai.entity.Special">
    update special
    set title = #{title,jdbcType=VARCHAR},
      image = #{image,jdbcType=VARCHAR},
      evaluate_work = #{evaluateWork,jdbcType=VARCHAR},
      major_style = #{majorStyle,jdbcType=VARCHAR},
      student_style = #{studentStyle,jdbcType=VARCHAR},
      create_id = #{createId,jdbcType=INTEGER},
      create_name = #{createName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_id = #{modifyId,jdbcType=INTEGER},
      modify_name = #{modifyName,jdbcType=VARCHAR},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      states = #{states,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>